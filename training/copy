public class Employee
{
    public int Id{get;set;}
    public string Name{get;set;}
    public string Address{get;set;}
}
public interface IEmployeeComponent 
{
    void AddNewEmployee(int id,string name,string address);
}

public static class EmployeeFactory
{
    public static IEmployeeComponent CreateComponent()=>new EmployeeComponent();
}

internal class EmployeeComponent : IEmployeeComponent
{
    public void AddNewEmployee(int id,string name,string address);
    {
        Console.WriteLine("Employee Added");
        var emp = createEmployee(id,name,address);
        //code to add the Employee according to the business requrirement
        //todo: Using Json Serialization , U should add the Employee to a Json file and name should be empname.json
    }
    private Employee createEmployee(int id,string name,string address)
    {
        return new Employee{Id=id,Name=name,Address=address};
}
}



//DLL


i c emp
{
    static void Main(string[] args)
    {
        //simpleExample();
        usingEmployeeComponent();
    }
    private static void usingEmployeeComponent()
    {
        var EmpComponent=EmployeeFactory.CreateComponent();
        EmpComponent.AddNewEmployee(123,"Nikhil","Bangalore");
    }
}





//operatoroverloading

using System;

class employee
{
    public int empid{get ; set;}
    public string empname{get; set;}
    public int empsalary{get; set;}
    public static employee operator +(employee lhs, employee rhs)
    {
        lhs.empsalary  + = rhs;
        return lhs;
    }
    public static employee operator -(employee lhs, employee rhs)
    {
        lhs.empsalary  - = rhs;
        return lhs;
    }
    public static explicit operator employee(cst  rhs){
        var emp=new employee{empid = rhs.cstid,empname=rhs.cstname,empsalary=rhs.basevalue};
        return emp;
    }
}
class cst{
    public int cstid{get ; set;}
    public string cstname{get; set;}
    public int basevalue{get; set;}
}
internal class operatoroverloading
{
    static void Main(string[] args)
    {
        employee emp=new employee{ empid=11,empname="Nikhl",empsalary=45000};
        emp + = 5000;
        Console.WriteLine("added salary "+ emp.empsalary);
        emp - = 5000;
        Console.WriteLine("deducted salary "+ emp.empsalary);

        employee emp2 = (employee) new cst {cstid =2,basevalue=40000,cstname="Nikhil"};
        Console.WriteLine("the name "+ emp2.empname);
    }
}
